(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    111384,       2064]
NotebookOptionsPosition[    109587,       1996]
NotebookOutlinePosition[    109994,       2014]
CellTagsIndexPosition[    109951,       2011]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
CSci5105: Programming Assignment 3 (A Simple MapReduce-like Computation \
Framework)\
\>", "Title",
 CellChangeTimes->{{3.541958883900666*^9, 3.541958890410492*^9}, {
   3.541959575112999*^9, 3.541959600792244*^9}, 3.541959966992551*^9, {
   3.5439696804050913`*^9, 3.5439696903180532`*^9}}],

Cell["Kambala Balasubrahmanyam and Daniel DaCosta", "Subtitle",
 CellChangeTimes->{{3.541959610252138*^9, 3.541959641855651*^9}, 
   3.5419599749220057`*^9, {3.541960035531238*^9, 3.541960038458377*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.5419595199796143`*^9, 3.541959525097663*^9}}],

Cell["\<\
This document describes the programming assignment three submission for the \
group composed of Kambala Balasubrahmanyam and Daniel DaCosta. This \
assignment required that a group implement a MapReduce framework that could \
be used to evaluate performance with respect to load balancing and fault \
tolerance. 

This implementation is expected to operate flawlessly and has been tested \
thoroughly. Please contact one of us if this is not the case.\
\>", "Text",
 CellChangeTimes->{{3.541959535428688*^9, 3.54195957216848*^9}, {
   3.541959888471922*^9, 3.541959915759056*^9}, {3.5419599956989107`*^9, 
   3.541960261749941*^9}, {3.541960296367669*^9, 3.54196041130167*^9}, {
   3.5419914476759577`*^9, 3.54199149308305*^9}, 3.5419958067445927`*^9, {
   3.543969695184313*^9, 3.5439697128877277`*^9}, {3.543969975628373*^9, 
   3.543970050128615*^9}, {3.54398256304107*^9, 3.543982575353814*^9}, {
   3.5439827461994467`*^9, 3.543982792268606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Assumptions, Caveats, and Terminology\
\>", "Section",
 CellChangeTimes->{{3.541960554676148*^9, 3.541960559937771*^9}, {
  3.543970620260248*^9, 3.543970628476857*^9}}],

Cell["\<\

\[Bullet] Job: A list of integers to be sorted.
\[Bullet] Task: A subset of a Job.
\[Bullet] Client: An interface to submit Jobs and receive Job responses.
\[Bullet] ComputeNode: Can sort and merge tasks, can accept/reject Tasks \
based on load, and can fail probabilistically.
\[Bullet] Server: An interface for submitting Jobs, marshalling Tasks between \
ComputeNodes and a Client.
\[Bullet] Data is read from a file by the Client.
\[Bullet] Data is passed between the Server and ComputeNodes as lists.
\[Bullet] The Server may only accept one Job at a time.
\[Bullet] ComputeNodes will fail only after a sorting Task has been assigned \
to it.
\[Bullet] When ComputeNodes fail they do not return.
\[Bullet] All ComputeNodes must register before submission of a Job by a \
Client.
\[Bullet] Tasks are only transfered due to load prior to Task execution. If \
load exceeds load threshhold during execution the Task will not be \
reassigned.
\[Bullet] If no other ComputeNodes will accept a Task reassignment, the \
over-loaded ComputeNode will execute the Task.
\[Bullet] Load is simulated via a Guassian or Constant (as explained by Dr. \
Chandra in class)\
\>", "Text",
 CellChangeTimes->{{3.5419606700450993`*^9, 3.541960869284788*^9}, {
  3.5419609154100533`*^9, 3.541960917809146*^9}, {3.541961075710557*^9, 
  3.541961081667309*^9}, {3.541961117297494*^9, 3.541961119502458*^9}, {
  3.541961162982037*^9, 3.541961709483737*^9}, {3.541961779953225*^9, 
  3.541961835296*^9}, {3.54196190446961*^9, 3.541962082343421*^9}, {
  3.5419627133973083`*^9, 3.541962725827695*^9}, {3.541962768891761*^9, 
  3.541962833262164*^9}, {3.5419713816540413`*^9, 3.5419714191813927`*^9}, {
  3.541991517972821*^9, 3.541991764652652*^9}, {3.5419958083823547`*^9, 
  3.541995837564259*^9}, {3.5439700689514503`*^9, 3.543970110720727*^9}, {
  3.543970305754879*^9, 3.543970340080379*^9}, {3.543970399921735*^9, 
  3.543970434921011*^9}, {3.543970494176539*^9, 3.543970596441607*^9}, {
  3.543970638871585*^9, 3.543971192499979*^9}, {3.543982610267473*^9, 
  3.543982702655342*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Design", "Section",
 CellChangeTimes->{{3.541962823622253*^9, 3.5419628244098673`*^9}}],

Cell[TextData[{
 "As discussed in the problem description there are three major types of \
components: Client, Server, and ComputeNodes.\nAll communication is done via \
RMI.\nThe basic control flow for Job completion is shown below.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
89FHH9kYWfQJthT5doQQQggRBs4991yrT2rVquV7KEIIIYQQlldeecXGxU6a
NMn3UIQQQgghLL///rtp1aqV2bFjh++hCCGEEEKkMWrUKFsTRQghhBDCN7t2
7bK9AS+44AJb437Lli2+hySEEEKIfAy5O2eddZZp0aKF9fH06tXL1pRVjrEQ
Qggh8pp//vnHDBgwwBx99NHmtddeS/fckiVLTLFixWw8ym+//eZphEIIIYTI
T3zzzTemUqVKpkyZMmbz5s1RX7Nz507TvHlzc/bZZ5tPPvkkj0cohBBCiPzE
66+/bo499ljTo0ePmGJhx44da4466igzcOBAa3MRQgghhIgXu3fvNm3atDGn
nnqq+eCDD7L13k2bNpkrr7zSVK5c2Xz77bcJGqEQQggh8hOfffaZOeecc8yN
N95otm/fnqN9/P3336Z79+7W9vLGG2/EeYRCCCGEyE8MHjzY+meoDxsPFi5c
aE455RTTtm1b9ekRQgghRLb47rvvTNWqVc3ll19uvvzyy7juGxtMkyZNrE1m
+fLlcd23EEIIIVKTmTNnmuOPP9489NBD5q+//krY57z88svWNvPUU08l7DOE
EEIIkdxQX619+/bm5JNPNgsWLMiTz9ywYYO59NJLTbVq1cz333+fJ58phBBC
iORg5cqV5rzzzjPXX3+9+fXXX/P0s7HRdO3a1dps3nzzzTz9bCGEEEKEk2ef
fdYceeSRZuTIkV7HMX/+fHPSSSeZe+65x9pyhBBCCJH/+PHHH02tWrVM6dKl
zbp163wPx4LtpkGDBqZUqVJm1apVvocjhBBCiDxkzpw55r///a/p0qWL+fPP
P30PZx9eeOEFa9MZMmSI76EIIYQQIsH88ccf5t577zUnnHCCmTt3ru/hZMra
tWvNxRdfbGrXrm1++ukn38MJJQUKFDD77beftkw2jpEQQojwsnr1anPRRReZ
OnXq2N8z8+ns2rXLrF+/PiHjoFb+7NmzzZQpU2ydlczAtnPfffdZW8/bb7+d
kPEkM8y/InN0jIQQIryMGDHC1hoZOnSofXzHHXfYnjiOfv36pdMr9Bym305u
adWqVbrH1Ga7+uqrbR4zn3nBBReYpUuXZrmfd955x9p8OnfubG1A4l8092aN
jpEQQoSPX375xdSrV8+cf/755osvvrB/w35BXGzLli3Np59+amNSsat06tQp
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
Izz00ENWK65atSpNn0yaNMnaWi666CLTqVOnffbl9MnevXvNkCFDbC7W+PHj
7XPlypWz57Z9+/bmu+++S/c+novkiy++SLsG5s6daz+fcdxzzz3mjjvusPYV
+gv26tXLfp7zB6JP0FCuv+CwYcPSaZ3gGB588EHz119/mb///tvW2s8N0idC
CJHa3HbbbWb48OG+h5FU5GZunDp1qilfvrypWrVqWl53pUqVzJtvvml1AvHK
Tp889thjZuHChebee++N6ktx+mTevHmmT58+1l9EPeBffvnFnHzyyVZXUIOt
R48e6d53xhlnmIYNG6ZtaAbGBPQ7+P77702jRo2sdkJD8fmMj1glaqbUrl3b
fgb6BD9U48aN7XuvueaadDVVgmN49NFHrZbh/4fWyQ3SJ0IIkdq0atXKrntF
7OR0bty5c6f58MMP7e8//fST9e98/vnnpnr16mmvqV+/fpb65P333zd//PGH
Wb16tdUzzP3ElEDfvn3N/PnzrYYANIbTD46g/QQ6duxoFi1aZPtZ856zzjrL
2k/YnnzySatPnn76afvaNm3aWL+T8+/UqVPHvPfee6Zr167p9hkcw/r16609
hvfn1KfkkD4RQojUhniIoUOH+h5GUpHTuRHbAj1v0A/EvWJDwe+B/YQeSMuW
LTPdunXbR5/cf//99qeD12CHwKfDa9gfGuabb76x+/z999/Nqaeean01aM+g
/rzsssvMp59+mrZt27bNfPbZZ+a8884zU6ZMsa/BrkJ8Lo+JT0KfPPPMM/a5
oD7BDsR70UuRRBsDWub666/P0fGLRPpECCFSG+mT7JObuREbQs+ePa29Al0B
NWvWtFqDGBT6CX/55ZfWlkFuDRqBef+JJ55I2wevIZaDvtPEcqB7pk2bZh54
4AGzdu1a+5rRo0dbHTNmzBj7mkj69+9vunfvnrYRawIDBw5MyynavHmz/Qz8
RuQJ4UsiFgamT59u/Tavvvqqffzzzz/buJog0cbA/uLR70n6RAghUhvs7c89
95zvYSQV8Z4bs8qDCTPolLvuustMnjw5y9fil7ruuuus3skt0idCCJHatG7d
2q7dRezEe27EVpGsEAeDjScWiKWNhzYB6RMhhEhtiCV49tlnfQ8jqdDc6B+d
AyGESG3uvPPOtLhHERs5nRs3bNhg65Ns2bIlziPKGuJwI2u8EQfj6rBk9h5i
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
0CthwPc5EP9jxYoVaTaUQoUKhb4WtQgX3Htuvvlm38MQISUZ9Am5xeQYhwHf
c+O7775rf+7evdvcf//91vaBTeWPP/6wf2/SpIn56quvTNOmTe3jrPQJdT/J
76NHV+XKla0mQaOwpqlTp47ZsGGDqV27tqlbt670iYjKueeea8/Jdddd53so
Isl48cUXrZ1XiGgcc8wxoY9nozYbtoIw4HtuxFc7ceJE68OhbwUag/7O2NXX
rFljbR/YT5w+4bX0MA/i9Mnnn39u9Qnr3lKlSplFixbZ5/D5jRkzxtpfnX8H
u83q1avz9P8bjazOwYcffmh9XeS9EiMhEgsxBAULFjTTp0/3PRSRZLC+atas
me9hiJBy7LHHWj9AmKG2PTXuw4BvfYKty/X8fO211+zf9uzZY/P0sG/wPI8n
T55snyM3i/idYH+UOXPmmI0bN9rfiblFA86fP9+uZ7CfoFEGDRpk7TTuc9at
W2def/31vPvPZkC0c8D/Gz/XaaedZnteHnDAAfZ1Ya/tkwqgbfENct0JkR2w
7bq1lBBBjjvuOPPtt9/6HkamMFfSIzAM+NYn4n/nAM2FXsIvRexDMJeEXNfc
1PYhNofed3///bf9LGJ98KNhk2EuRrsRP4wtizmaPpv0smIjZhltxOejEcmR
wyaFjsJeyZqA790333xjtm7darZs2WJjfvDNsW3evNls2rTJakhioPGzrV+/
3mpEYoKwlWHLon4r+d8rV660sSDYw9jQmJ999pmNof7kk09s3NJHH31kbUvL
li2zeVz48hYvXmxtZsQ9E1v9/vvv240YaXLP0az4FLG1zZ0717zzzjvm7bff
tvqWmKe33nrLzJo1y7z55ptm5syZNl+MDVvKG2+8Yc/PtGnTzNSpU20eGbqZ
erPY9SZMmGDGjx9v9S9+yLFjx5pXX33VbtjuyF/GLsgcxjob7Uy8AjY9bDbE
a6PLqfFFHVJqpdPPhY38NnrjouWJncKGiA4fPHiw1d3krWF3RNMOGDDA9kjv
16+fvc+wsR5C72O3xbdM/Bsx6MTpE0ferVs3m1eI9n/ooYdsjBx+aHQ+G75X
1lXcu8i3o/96p06dTMeOHU2HDh3MPffcY9q3b2/atWtn7r77bhuPjo+VdQcb
tlH65qH7qP+OjZMYduyC5ONiR8UHS+wG/hFsEMzzN910k91uvPFGc8MNN1h/
b+PGjW1cWsOGDW28PPZQ7Kz4hfHb4sfFN4cft1atWnarWbOmqVGjhrWZVqtW
zVStWtVce+21Ntae79s111xjKlWqZPMAiYUrX768KVeunLn66qvtVrZsWZtf
SD7XlVdeaa644gpz+eWXm8suu8xceumltl9T6dKlzemnn26PjxDROP744+09
Mszw3eb+EQakT/zjzgH1wdAgwRphbiOvBFsKG3XD0C8HH3yw1TK8D58Er8HW
sv/++5sCBQrssw/+xnO8htfyHt7LPtgX+2TffIarpcpGXyvqqVL/kBpD5PGT
K0e8Fz5V7JasDfj+/fe//zUnnHCCOfHEE81JJ51kt5NPPtmccsop5tRTT7U2
oWLFitl7OXXkiX2mRuvZZ59tihcvbkqUKGHOOeccGwdSsmRJu5133nnWX3f+
+eebCy64wPbH4XhdfPHFdl5gfmCeYL5g3mD+YB5hPmFjbmGOYa5h3mH+YR5i
PmJeYn5inmK+Yt5i/mIeYz5jY25jjmOuY95j/mMeZD5kXmR+ZJ5kvmTeZP5k
HmU+ZWNuZY5lrmXeZf5lHmY+Zl5mfmaeZr5m3mb+Zh5nPmdjbmeOZ65n3mf+
RwegB9AF6AN0AnoB3cA9hnkSPcGGtkBjoDXQHegPdAh6BF2CPkGnoFfQLegX
dAx6hg1tg8ZB66B7uH+hg9BD6CL0EToJvYRuQj+ho9BTbP/X3pvAWzX9///f
8FGGzCRK0kCaJSnSoE+RuVCRKENShFCJUio0kAZpUjSYKlIaRaQiNGjOTKVU
IsOH8Fn/x3N9/uv+TqfbvefeM6y9z3k9H4/9uNMZ1j1777Ve6z2irdBYaC10
F/oLHYYeQ5ehz9Bp6DV0G/oNHYee40DbofHQeug+9B86ED2ILkQfohPRi+hG
9CM6Ej3JgbZEY6I10Z3oT3QoehRdij5Fp6JX0a3oV3QsepYDbYvGReuie9G/
6GD0MLoYfYxORi+72DkhogmDPmH+4N4OAtIn/nHngOuWdYD1PNKn4w40BPYH
bBvYOLB1YPPA9oENhHkRmwi2EWwk2EqwmXAIIYTwC3s37MtBhn0Oe44gkAx9
gt3exXFih2df46OnNL6DSF8ffoJYnpNd3AH+hmSR3TlgL8Y+Gp2C/cLpk6DX
9hFCCJE92JXxfQcZbLHYQ4NAMvQJdmfADowd3OUMY0dNNMQ07C9XG5s4tn3s
CIANPzewbbk420iwKbv6b4kmp3OAPQR7NWPncbnV7hdCCBFM8HkTlxdk8Bnj
pw0CidYnaBD8yfgUiANwEGOJHQWtgB8a3zu+Y8AHji7AD4+vGj88MZDEXPI3
/PX4w1mr8YXju8CXgY8MnzjxCMRb4i/Gf48vncegTzh4P3D6BNsEv8cXT8wn
j8UXzvsTa4A+IUYTHYnv3z0mWXXxYz0HudX+F0IIEVzw3ZMvEGSwLwSlJ2qi
9Qn6gbgxci2yq6OIDQJNgdZAd5APQqwkWoT4PHQIWobYQ/xExEGSK0LcHjFt
xCcSX0HcBXGI+GPQe/xMHCI6gtfH3oEGQWcQ94ifx+kTYhmxQxAnR0wfX3lf
fFLEWqJPiG9EDxA/R6whEF8ZXVc/ESgGSAgh0p8w6BNi77OrMeaDRK+N5CGQ
P4qPjfwJB2s/thFyA4h5B3IBiI3HZgFoNjQIkEeBPuGzAmLn8Yk5fYJNI1Kf
EFePLwebB88hZh99Qt4qthjyJtAn5MK6/qK8Br/H3kJMPjhNQz4Jr8XhtCS5
Gsmody59IoQQ6Q95jNRaCDLkCLJWB4FEr42s9eToAXmYxAFT0wJbCjmB6BHs
EeSqkMOJbkFzQHb6hBxTNAY2J84rr4MWQeegT7B1oImwnxDrgq2FuBfy/5w+
AXItyYEF3g8Ni+2EnEZsOsQso6nIbeU1eW0eQ+wH/irAppMMpE+EECL9ocYC
MZNBhjoG1AMIAoleG6kD4Gq7oBmoV0D9BeprAXEp1CUg9oO6XMBjALsK9hCg
9gH6hHoS1HSg/gGgP/AhYR+h7gGvhz+Hc06uELYUNAdQ74DHA74a12+H16UG
BDUSXA4utRTQKMTEYFdBC/EYXpt8Huwm1KNIBtInQgiR/lD/Kbv8iyBBzCV1
ioJAMtZG1nniQOIFHUHtqSBAjK3TTolG+kQIIdIfalMS/xBk2IdTQzEIJGNt
JPY0EXGkvEZQehUks++N9IkQQqQ/5IKQaxpkqLtFPmsQ0NroH50DIYRIf8Kg
T6jRQd+JIKC10T86B0IIkf7Qc4y4hSBDfqvLCfGN1kb/6BwIkTPZ9brUkdqD
cyDig36oyYpjTBTUKXU5Jr7R2ugfnQMhckb3iH90DuKHXu0ubzWoUMODPuJB
QPsS/4f2JULkjNZG/+gcxA91P11NrqByww032J55In50zwiR/ug+94/OQfyE
QZ/Qd4b6YyJ+dM8Ikf7oPvePzkH8lC1b1qxfv973MHLkuuuuy6qHKuJD94wQ
6Y/uc//oHMTP6aefbvu9BJkWLVqYiRMn+h5GWqB7Roj0R/e5f3QO4of+bvSf
DTLNmjUzL774ou9hpAW6Z4RIf5Jxn9NjhJ7kV111le0/6np1denSJabn06OU
/qaxsnPnTnPRRRfZnmIc9PeiF3t+oNcqPc3ozf7TTz/l6zXyiuba+ClXrpxZ
s2aN72HkyLXXXmuvLxE/umeESH+ScZ/TJ4w+50C/UdefPNZeFvQ4pwdqrNCr
Ay3koM4E/UjzAz3aFy5caHvBp2q901wbP2HQJ1zX9MsV8aN7Roj0J9n6BM45
5xzz559/Wt1Af9MOHTqY+++/3wwcOND2R2/QoIFp3ry5adq0qdUwTp+MGTPG
9k0n74G+59dff735+eefze7du20tCUe0PunWrZvtwb5582b7Pjyvf//++7z3
tm3bTKdOnexzqOuJLkGfzJ4929SoUcO+znvvvWd7qd59993mww8/TPhnBZpr
4+fMM880q1ev9j2MHOH65roU8aN7Roj0JxX6hLyF7777zlx88cVm+/btpm7d
uub11183K1assDXJnbaYPn261QlOn6AH5syZY/vS0+ec2pvUtxo3bpwZP358
1uujT+i/cvvtt1stQq2uH3/80fTo0cM8/fTTVm+gkdA4ke+9ZcsW07p1a/sa
gwYNMvPmzdvHfjJ06FCrTRYtWmS+/fbbhH9WoLk2fsqXL29WrVrlexg50qRJ
EzN58mTfw0gLdM8Ikf4kW59g6zjvvPPs9+gTYlFY97Fz169f38Y00jcNpk6d
audv9Am92i+88ELz1ltvWVsH+oTf4SsixuQ///lP1vtF20969uxpXwfbC/kS
77//vhk2bJjVI5Hvjd5o1aqVfQ6xMdnpE9Y8jt69e1t7SjLQXBs/FSpUsHFD
QYaYLK5xET+6Z4RIf5KlT1j/0RmXXnqpWbJkif09+gT/zWWXXWa6d+9ufTTY
T0qUKGF1QqNGjcyePXuy7Cc8rmvXrtb+go8HbrvtNmvPiCRan1ADq0+fPtbe
j98Iuwp6I/q9gb9T1/Oss87aS5+gh3gf6n3ynvh4Im02iURzbfxUrFjRrFy5
0vcwcgRt/dprr/keRlqge0aI9MfXfY6fB9AnrP3kyvz3v//d53Eupva3336z
Xzt37pynOMh//vnHbN26Ndv3dkTaYiJxOUS8t3v/ZKC5Nn4qVapkfXZBBm08
bdo038NIC3TPCJH++L7P0Q6x9kzDL4NdI93wfQ7SgTDoE2yJ5LOJ+NE9I0T6
o/vcPzoH8VO5cmVbsybIXHLJJTYGXMSP7hkh0h/d5/7ROYifKlWqmGXLlvke
Ro4Qf/Xmm2/6HkZaoHtGiPQnaPc5NUrI6QXiVOvVq2fzHqhfAq6+a6y1aGHB
ggU27nbIkCFJGXO8BO0chJGqVauaTz75xPcwcoQaxzNnzvQ9jLRA94wQ6U/Q
7nP6u6IniGslJ8OtOffee6/NNXb5NbHWooXGjRvbr+QbR8fGBoGgnYMwQv7V
xx9/7HsYOdKwYUNbi0fEj+4ZIdKfoN3n5BYD9VOoy+Ygv4dcH6dPqEULgwcP
tj1+qIlCHx7qsfE8coIHDBhgc4ZLlSpl66sRm0gdlKARtHMQRsKgT/7973/b
eoMifnTPCJH+BO0+J4YQRo0ala0/xukTfPnUpMU2wp6U2mn4haij5nz81FMB
Zz/54osvbH3ZoBG0cxBGqlWrZj766CPfw8gR6g2il0X86J4RIv0J0n1Oz+EL
LrjAfo9fx+kKoC/9iBEj9tIn1F+jJyz1Yal79cEHH1h9wlfgMeBeh/r21GoL
GkE6B2Hl7LPPNkuXLvU9jByhZiE+SpE/8PFyrxxwwAFZX933Qe8NKYTIO0Fb
G52mgH79+tn4WGrHtmvXztZLi9QnQL8/6rzy86ZNm7LVJ/QfpM/f3LlzrcYJ
GkE7B2GkevXqSevfmCjo/fT222/7HkZooX7z4Ycfbu+XyOPggw/eb41FIUR4
CdraSK22yDmcfB767uQEMa/YXvYHr8HfH3jgAds3MGgE7RyEEfo/Ol0aVOrU
qWPeeecd38MILdRwLlSo0F7aBPuJ630hhEgvgrY2UuM+GT1e0SdB7X0StHMQ
RsKgT/Bdkpsm8k+LFi2yfDoc2FMie6ULIdIHrY3+0TmInxo1amT1oQwq559/
vvUzivyDbzfSx1O0aFHfQxJCJAmtjf7ROYifc889N/D76PPOO8+uryI+Tjjh
BHvP4Ovp1auX7+EIIZKE1kb/6BzET82aNW2NmyAThjGGgR49epiCBQvauFhi
4oUQ6YnWRv/oHMRPrVq1bJ55kAmDjScMUCeAe4aYIyFE+qK10T86B/ETBt9J
GGJ4wwLxRvTCEEKkLwUKFNinnoCO1B6cAxEfYdAnYajREhaoBS2EEEIEnTDk
xoShxm0YePfdd81pp51m+5rTc0sIIYII+YXYekVmU7t2bbtuBZkw9DAMMtRZ
7N69uznxxBNtHA/17osXLx54XSqEyDx27NhhDjzwQBvLr/rWmU0Yap9VrVrV
9pUSeefbb7+1NjJ6QG/dujXr97NmzbJ6hZwe9IsQQgSBQYMGmUMPPdQULlzY
TJo0yfdwhEfCUDu+cuXKZvny5b6HETqmTJlijj/+eNt7i/rS0Xz//fe2xxY2
NHqaCyGEb0qXLp0VY0ptCZG5hEGfVKpUyaxYscL3MEIDNlH6ghJrklvcDrrl
8ccftzomqH0shBCZwaeffmoOOeSQLH2Cj2fz5s2+hyU8EYbewBUqVLDXrcid
1atXm/Lly9t+O7t37475eeRHlSxZ0txxxx3y+QohvNC+fXtz0EEHZekTal0/
+uijvoclPFGvXj0zf/5838PIEdbbVatW+R5G4Hn22WfNcccdZ3uZ54eff/7Z
NG/e3OrBNWvWJHZwQgiRA/QijuwR5o6TTjrJ99CEJ+rXr2/eeust38PIkXLl
ymm9zIFdu3aZpk2bmipVqpgNGzbE/XrPPfec1TkjRoxIwOiEECJ3Xn/99b18
O+6gH0fQe9iK5HDhhReaefPm+R5Gjpxxxhlm7dq1vocRSOhLdMopp5iOHTua
P//8M2Gvu379ehuXfPXVV1v9I4QQyQQfPrma1AsvUaKEjZ/je/anqiuZmYRB
n5x++ulm3bp1vocRKP755x/rl6Un8YwZM5LyHuidu+66y+of9T8SQqSK+++/
3+YdisyG/NK5c+f6HkaOlClTJiF+i3SBeHbyrogd2rJlS9LfD/2DDurdu7fV
RUIIkUykTwRQt2vOnDm+h5Ej5MNv3LjR9zACwRtvvGG1Qp8+fVKqFdBE5Hpx
KN9PCJFMpE8ENGzY0MyePdv3MHIEP+Tnn3/uexhe+eOPP8ydd95p/bK+fC3o
IWwo6KPp06d7GYMQIv2RPhHQqFEjW+s8yFCXI5Pjo1ys6jXXXGN++ukn38Ox
+oiYFGJT0E1CCJFIpE8EXHTRRWbmzJm+h5Ej2Ay++uor38PwwpgxY8yxxx5r
Ro4c6Xsoe4FOIrcH3YR+EkKIRCF9IiAM+oS9+tdff+17GCnF1UqrWLFioHOr
0U3oJ2qmCCFEIpA+EXDxxRebN9980/cwcqR48eLmm2++8T2MlEGt+VNPPTU0
tebRT9ScRU+hq4QQIh6kTwQ0btw4afUzEsXJJ5+cEf11I3v1UUsxTKCj0FPE
CqGvhBAiv0ifCLjkkksCn4tB/4VNmzb5HkZS+f77722tvNq1a4dai9EDGX2F
zkJvCSFEXpE+EXDppZfamhpB5sQTT0xJHTJfkD/F//jII4+Yv//+2/dw4gZ9
hc5Cb6G7hBAiL0ifCAiDPilSpEharnPUj7/33nttfM17773nezgJBZ2F3kJ3
BT1/XQgRLKRPBFx22WVm2rRpvoeRI/gLtm3b5nsYCeWzzz4z1apVM1deeaXZ
uXOn7+EkDXRXsWLFrA5LZP9CIUT6In0i4PLLLw98LOZxxx1nfvjhB9/DSBgv
vPCCzckdNmyY76GkhB9//NHqMPQYukwIIXJC+kTAFVdcYWMag8wxxxxjduzY
4XsYcfPLL7+YG264wfYLX7VqVbaP+fLLL+05Ia+qS5cuSakXyzg+/vjjbP82
aNAg88wzz2T9fN999+X6euisWPxvPA5dhj4TQoj9IX0igH3t1KlTfQ8jR44+
+ujQ+0DQA/QRuvXWW83vv/++38fRb8DZsyZMmJCUexQbBrXps+P222+38TDo
JCDGNTc6deoUc31fdBn6rGXLlmb37t0xj1kIkTlInwgIgz456qijrI8gjJBj
O3DgQBtDM3ny5Bwfi13jvPPOy/qZfnzLli0zv/76q+0NeNttt5nOnTvbvxHX
3LFjR9t/+p577rG656WXXrJ1dhs0aGBrpTVt2tTs2rXL3HTTTeavv/6yNUrQ
H0899ZQ5++yz7WMHDx5sX5ta9WhA/o59g9cHp0+oD0t9k+uuu87qG+w6vG/b
tm3NWWedZfXJlClTrFbhuatXr97v/4k+438pVarUfu04Qoj8U6BAAfN///d/
OjwenAMRH1dddZVdV4LMEUccEYi+eHmFmF76B9SsWTOm+vxokRtvvHGf32NH
cT64hx9+2Kxbt872vUFzoH3GjRtntQzvRZ9nzilQ12b06NFWL/BYdAE9Bp39
hDxg/Ej0r+7WrZsZOnSo1ScbNmywfp1XXnnF6hPiWtElwHPQJfQF4u/A+9G/
sU6dOva1xo4dazVRbqDXiC0aMGCAaqUIkUBYH4VfdA7ip0mTJrnu631TuHDh
0NVNnzdvnq0rx7qPNogF7CRnnHGG2bNnj/2ZvnvoBWwcc+fOtb/DfoJ+cPaN
p59+Oit/F1sK+uTmm2+2P2MX49wSz4LtBJ9NpD7BxnHttdea999/3+qfDz74
IEufoGXQG9WrV7ef/fXXX29fEx1CLg42GLQINGvWzI6Vx/Nab731VswxTfQt
QL/h10q3HC0hfBHP2sg8QN4dX91clBfodxG532AuiaX/PI9hz+NqcVKjgLkI
2/nmzZvzPA6gbparnYUt2fUydbbpb7/9dq+1hX1kotYa6ZP4wQfw6quv+h5G
jhx22GHW9xEG0CJoCLTJ22+/nefnoynq1q1r42iJ0eD+2bp1q/W/4M/BdgE5
6RP6Pbdq1cqu+cwv+GtatGhhtSh6BFtUjRo1rE+mQ4cO5u6777Z9mJgXnD4B
5qhDDz3Ufk8tk/bt29sxrVmzxsbDMgYeT14Or4UdBF8ROet5qefCPPTQQw+Z
okWLZukwIUT+iWdtJD6MPVG/fv1M1apV87xe4wuO3JMxn3Tt2jXH59AD7vzz
z7f23nbt2tm5BD3BfIO9ONb5hNeJ3BuxV2J+A/ZUzFWwcuVKaxNmvmHuwj8O
vXv3trosEUifxA/rnrPTBxXWSGwLQQf7xDnnnGN7BsSbb5TdnBBLPCn6BB2D
Boncw0T3GUS3uL9v3749JhtP9PvzfOaQSHjf3377LdfXyo533nnH9lp64IEH
8rVvE0L8j3jWRuyZDvZac+bMMX379rV7D9Zy6mXhh0ZDYBthbwHYQkeMGGH6
9+9v71/sE8SZsadCn/BYNAK6YP78+Xu9J3sa9mEOfNZOnyxfvtzMnDlzn+cz
R+LvZo/Us2dPO8exnrFPc/MHv6OWNfC31q1b270VOYr4qIlt4P9hT8c+Dn3C
/8n+LnqMeUX6JH6w97/88su+h5EjhQoVyjHnJQi8+OKLNpaC/FyfcI8T/xFW
0HXYZdB5sdiE8wJxNPi7VINFpDvxrI2lS5e2sfDEkBFbxhqP3xl/ML4WfL3Y
PB999FFr1+B+5ffk2+DXJufijz/+sDoBu/eQIUOsPsE2Qm4ie5h69epl7Ynw
tTi7RiROn2Afxk4c/Xz8NsT5c193797dvjc5AtH1C7AjE/uP7Rj7NNoHjYMv
Bz2yaNEiG4cH/Mz/hb6JJXcxJ6RP4icM+qRgwYL77P+DAraCNm3amLJly1qd
LxID8xF6b9KkSXG/FvZazhF2uEMOOcRqHyHSmXjWRu4P1vNIGy42YcB/4upK
4jt58sknzcSJE+2eCF2C1uArtmQX68+8iD7BZ02+H/4W/CmRPvsyZcrsVV86
0r/j9En083kPF4ePdmHvkZ0+6dOnj31/4v/5n7CNOO2RnT4hhg7QNfEgfRI/
aErOaZA5+OCDrR4PGtx33FfcI2HwP4WNFStWWN2Xn8+XuB1iZogDIn7pwAMP
zMr7Y18nRDqTKP+Ow8W7YSch3p5YdjQ/cRzYtmvVqpXl53H2E2La8AeRI4A+
wG7x7LPP2lhXF+/hwE9DfBuxJtgvqH8SrU+in09Ncfw14PQJB7EzkbA/Ofzw
w7PspowLnQNOn6C/8F9Hxp9In/iH3At8E0HmoIMOClw8AvcANU18fHbEn3GP
cU9xZJd/RU4y9thevXolRNvxHuxf2NekEmefQgfGap9iXuCawe6WXV2C008/
3frVqc/74IMP2vmT+REbMZoGXzafG3MVe6/HHnvMPP744zZeEN86nwH7Rnzh
zJtcC+zN2FcOHz7czqH44UeNGmXnTc4X+8vnn3/e7u3Gjx9v95zYhtgbYL8k
Rp3PGPsz8X3YsenbSY44e1b87znVlBEiknjWRq7ZaCLtmKzf6IfFixdn/Y7r
mT0BcE273Bty/bi2sbUwh3MP4Dsixj4S7C7kA/J44j6IbcNmzv2ArnC5RJHP
Z25wtSyJdSFvCLsP93JkPB1jiaz1RjyNq7uEf4pxE/vGXM7PLn+I+zQepE/i
hzpeibChJxP2vrHm6CYbFx+B3zPR8RGxwnqaW+wW9gbuZ/x38cbucH/zOthf
iUVz81AqYc6LNb6HGnf4cdgzZadPKlSoYDUHMX/O34wmQZugUZjf2AuiXdj3
oWWI2aUmDPXnmEOxMROHTCwdOVDMmeQdsC8jJpD9HXneaCvsP9i6XU4W/nvy
qbj3sF/y2ZJHR34Ve0/2p/TF4jpDf6JFzz33XGsHEiIWtDb6R+cgfpgn0b5B
hjp86GvfROaX+NRL6BP22GglDvYaxKJT04T1jzh6YtLYIzh9wu9h6dKldp9P
/DrrJc/76KOP7LrLush+HfspOoQ9EroAP/Gnn35qn8/aunHjRi//d17yo7AZ
MXbWdfyDkbYU52sOE+QZuLp7QuSG1kb/6BzETxj0CeeZfSXzM3tM8sRYd9l7
sgflf2DdZA1mzWWvyp4V3yR72FtuucXuadnbsu6y18XXyb6XNd3VFWFfzDrN
uowGYd/M/pl9NK9Fb7sg1OdAn/AZMF4O7JwffvihtVvyP6I9nF/V6RNqy8LC
hQutrwJ7p/NNsXfHToqfF9sDz+OzRo/hD3bg6/BdK8fVl8nLvU/N2x49epgT
TjjBPi9ev7IP0KPoRyFiQWujf3QO4oc8K2IVggw1//BDsofER0+9Fnz27I/x
TaGv8BXi28c/ia8fnz+2AWIARo4caWMCiA1g7SZWAPsCcQP4C4gjoE48cQXE
F7B2s4bjA2BNZq1H49Cn0NVC80m0fwfbEvHo+Hj5P7LTJ25NRl84fYJWgYYN
G1q/K3HrfF7EtOHL5Xs0oIPPzTf4mNBk+bn3sTOhucJYp5ZYFBejKERuBGlt
JCaE+YUDm25+6yNBdNxKkAnSOQgr2B3ijQPKFLi/6O2LjcVnvG528SfUN8LW
g97EjhStT3gOeXXUDYjWJ9hOiJPgWkDL4QPiecRiuJh8yK43UCrBr0QvQmxp
0XXh0p0ZM2aE0i8l/BCktZFrF58s+0HmnvLly+e7n5rT6NH5P0EkSOcgrLCW
ReeLi/3DXgA7O/WEglbny63Z+9uf5FRDhr9F9ogmJjZIGoBrlPhYbEOZCPk7
zkcnRG4EaW1En2CHduCTJ54NOyZ+V9Yg9h7MW/huiTmntgBxcVz3gJ2bmH/0
Ca9HvdcFCxZYHzX+evZVQSNI5yCsEK+BT0TkDXwdrJeyPSUXahIwf9ETZNWq
Vb6H4w1ii1S3RcRKkNZG9AT7OWIBiXXD14xPGh1CzDvx/OgOYvPJpcOHi++e
n51PmXWK/ZOznzhbYv369a1uwf8ftBpUQToHYUX6JP+wB6DuM59hWPoXhgl8
1aVKlbKxzUHvb5BsqN0db71tkTkEaW1En2An4R6mptqZZ55ptQY9SsnT5yB3
H585Of5oEOoHReoT/M3Z6RN0OzFy5EgErYZnkM5BWCEmgbp8In9wz+ELZR11
NX9EfBDHSqwy9qnsas9lIvTCpq+1ELEQpLUx2r/DfEmtQXInyTtkn0etRFeT
kDmVeDri58hLWLJkia0DHalP0OrYS4iV5/F8pZZtkAjSOQgrxDyGuZ9cUCAv
hnqy5M9E9g1ONuwzuD/JSyG+lfs30f2oiflIVf8jfNLEWVBjG7uv+B/42i+4
4ALfwxAhIUhrI7El5BY4qNFAfAkxsuRLUsuB+x69QZwJP+PLZR4lZ5M6iuRo
Mge5WqLEo5FviF0R+0sQYyiDdA7CCnVCyMUV8UM/TNZV6n1ix0w2xJNRuwWo
V4Lflj0GtUeJb00U5POQg51smLeKFi1qc40SOf50gFwratMIEQtaG/2jcxA/
1B2jTohIDNQPo54b6yzaPpkQQ+bqpWH7Z33HlkLMGXuN6LqwrHHUt2N/4mqR
fvLJJ3Z/Ev1Y+nxix6A/EyQzd8TVXKM2L3YgsS/YurPr2yZEdmht9I/OQfxQ
9yK7flAiPogXYL1l3U1WLXxnBwV64tC/DtsJ8WLYH6LrwlK/jTg0wAdMbVhi
6Kl/F/1YcoupleJo0KBBUuLj6WFUvXr1mGrWZzL0R6O2vxCxoLXRPzoH8SN9
kjy2b99u113WFWwaiYa8FuLMyMGl7pGDWDH229F1YdEnzk+Dz4Y6/tTJh+jH
ut7mDuwqidZZ1C4gZocewCJnOF/0pBQiFoK0NlIz6vvvv7ffE4tCP+5E5zvS
KzkoPWQdQToHYYWcdNYjkTyI+SIXBX9MIiFuyMXCUjsWnw32EXw4xJZF14WN
1CfAekefAIh+bLQ+cTomEWCHwa9YpkwZs3z58oS9bjpDbhi1c4WIhSCtjcxN
7KHYh7AnIt4eG208de6jwRacihi5vBCkcxBWyN8KYu29dIN1mPUYDZCo+5IY
EXocOog5ia75Gl0XNif291j27om6RvgcypYta/VJIuendIfPrXLlyr6HIUJC
UNZG8nLwIQP7J2dHJn+H74mXQ1fQl4OeHexdqIFC3Qv819Rxw1dNr42cHgv4
qIMUVx+UcxBmiEMgR1UkH+4n8qUSaTegtkCyc3+pzZiI+579E3Yk1zdZxA61
HSpWrOh7GCIkBGVtnD17dlaNtWXLltncRmL5qYdCPTZiC7DdkmtMvBs+8dKl
S5utW7faPAPy6tEi+K9zeiy0a9fOxvsHhaCcgzBDDAO9fUXqyLS4C+JeicMh
DjYZcTiZAHFG1N0UIhaCsjYOGzYsK8cQrQHYQajHRt1yam+3bdvW1jBhr/zd
d99l+ZWJ28c+fPvtt5vNmzfn+FigNr57jyAQlHMQZqRP/ODyVqinls55K+Qx
UfsxmXlMmcDatWttLwUhYiEoayP1YOmVDvh0qQeNHRlbB7UEqF3O+oP+QHNE
x73hE3I/5/ZY1jL8SUEhKOcgzKBHhw8f7nsYGQnrNT5W1m/W8XSC/406a/xv
ya4DkwmQn4BfUIhYCMraSIwcORhAzUp8PfQbdnH5+Hiwo/C7NWvWWF81/mQH
Gobc+lgeS1xKkAjKOQgz2M4ytWd9UGD9Zh1/6KGHAhXflV+oo1urVi1b0y1I
+5kw89lnn9keT0LEQpDWRuwnmzZtSup7UHsyUqsEgSCdg7CCnQ0fofAL6zh9
x6kRyvoeVrDfEltDf79U9iFKd/AHlixZ0vcwREgI0tqILTUZtR0jic5bDAJB
OgdhBVuZi68WfnF9e1nfw9a3l5g3/L+nnXaa+jgnATTrKaec4nsYIiQUKFDA
ro86/B2cAxEf0ifBg/WddZ71nnU/6FBjv1y5cjZWLdF1IcX/oH9BsWLFfA9D
iJRAr1PiTURm0759ezNkyBDfwxBRsM6z3rPuf/rpp76Hs1+IXTr22GMD2d88
nSBngZ6TQmQCxONVrVrV9zCEZ8gvHzx4sO9hiP3Auk9Ns6DFMNNT48orr7Q1
14ndFMmF/iVFihTxPQwhkg49egoWLGgOPvhgm/MjMhdqD2dKnbCwwvrPXgI9
gC7wDX0EixcvbvsQYocVyYd5Gp0qRLpDj55//etf5tBDD7XxeCJzueuuu2z/
OhFs8MWiB9AF6AMfkPtMv4sTTzzRzJo1y8sYMhVq+B1zzDG+hyFEUqHfztFH
H50VY6qctcymY8eOgev7KPYPugB9gE5IZa0UaklfcMEF5sILL8zqlS5SB/mT
Rx55pO9hCJFU5s6dawoXLpylT7ChqMd55iJ9Ej7QB+iE2rVrW92QbOjJRc7z
Y489ppomnqAOJ/O2EOnMFVdcsVeO7oEHHmhriIrMhF5LTz75pO9hiDyCTqCn
J7rhtddeS8p7UD+a/K5TTz3VfPjhh0l5DxEb5HMddthhvochRNJAgxMXG11H
5PDDD1eucYZyzz33mIEDB/oehsgn6AZ8tNSxQU8kCvrRVaxY0TRr1szOG8Iv
1MEpVKiQ72EIkTTo/cc1fsABB1hdwlf3PX0GReZBzKVipMMN+qF58+amQoUK
VlfEy6hRo2xNkzFjxiRgdCIR/PHHHzbfUoh0hTr4ffv2tQeaxH2v9Slz6dSp
k+nfv7/vYYgE8Nxzz1ldMXLkyHw9/6effjLXXHONqVSpklm/fn2CRyfigbkb
X7wQmYB61wiQPkkv0BWVK1c2V199dZ56Zi1evNiUKFHC1sNhry6CBXmX6uch
MgXpEwH33Xef6devn+9hiASCvqCuDXoD3ZETrHt9+vQxJ5xwgny8AUdztsgU
dK0LoFbfE0884XsYIglMnz7d6o7evXtbHRLNli1bTP369U2dOnVsfxcRbIgV
TGXNGyF8IX0i4IEHHrB5qiI9QXfUrVvXHpEaZMaMGVa79OrVK1vtIoLHQQcd
pDxLkRFInwjo3Lmzrbsl0hf0BzYU9Mi7775ra96ccsopZtGiRb6HJvIAtSES
mUMuRFCRPhEgfZI5EItStGhR06hRozzFzopgcMghh5jffvvN9zCESDrSJwK6
dOlic8xFZnDZZZeZSZMm+R6GyAfU0dy9e7fvYQiRdKRPBHTt2tXmb4jMoHXr
1qq7FlKOOOIIW6NGiHRH+kTAgw8+aGMTRGZAP50hQ4b4HobIB/Sd37lzp+9h
CJF0pE8EdOvWzTz66KO+hyFShPLJwwu1gbdv3+57GEIkHekTAQ899JDNMRWZ
QY8ePewhwgf5V1u3bvU9DCGSjvSJAOmTzALbCTYUET5OPPFEW1NPiHRH+kTA
ww8/bHr27Ol7GCJFDB482HTo0MH3MEQ+OOmkk8ymTZt8D0OIpCN9IqB79+7m
kUce8T0MkSJGjx5t2rRp43sYIh8UL17cfPPNN76HIUTSkT4RoHiEzILaJ82b
N/c9DJEP6Pf41Vdf+R6GEElH+kQAthNsKCK9+eKLL8zSpUttLnmNGjXM5MmT
zQsvvGC2bdvme2giRk477TTz+eef+x6GCAEFChSwa7wOfwfnQMSH9En6s2bN
Gnu/HHnkkbbGF3VI+Uq99CuuuML38ESMlC5d2mzcuNH3MEQICLv94a+//vI9
hLgJ+zkIAsTGEiMr0ptixYrto+/RKLNnz/Y9NBEjp59+ulm3bp3vYYgQoLXR
PzoH8UNuMTnGIr2hZuxhhx22lz459NBD02KfkimUK1fO2sKEyA2tjf7ROYgf
asdSQ1akN7/88ospVKjQXr7RZs2a+R6WyAPly5c3q1at8j0MEQK0NvpH5yB+
iJekB49If26++WZz0EEHZfl2Zs6c6XtIIg9UqlTJrFixwvcwRAjQ2ugfnYP4
kT7JHNauXWtjYrlv+Lpnzx7fQxJ5oEqVKmbZsmW+hyFCgNZG/+gcxE+fPn1M
165dfQ9DpIjq1avb++baa6/1PRSRR6pVq2Y++ugj38MQISBZa+Nvv/1mli9f
npTXzi+7du0y77333l5Hbn2qqHPI/5JMpE/ip2/fvqZLly6+hyFSxNSpU62P
58033/Q9FJFH0JYffvih72GIEJCstXHEiBG2T+XPP/+clNfPDnqGffbZZ/v9
O1rjySefNK1atTKXXXaZ/X716tU5viZ1NZIdyyV9Ej+PPfaY6dy5s+9hiBSB
T2f48OHm119/9T0UkUfOPfdcs3jxYt/DECEgWWtj48aNzVNPPWX7ZMBPP/1k
4wPo6UWsALAHuuGGG2zuxSeffGL69+9vNcPcuXOtj/nuu+82bdu2tXaP7J7/
/PPPm1tuucVqCB5TtWpV06lTJ/u3iRMnmpYtW5oxY8bsM7aXX37ZDBgwwH6/
YMECG29355132rnuyy+/tO/LWrd58+YsffLOO++Y8ePHJ+Wzkj6Jn8cff9w8
8MADvochhMiFWrVqmffff9/3MEQISMbauH79enP77bebH374wTRo0MD+rl+/
flaP8DvqG+/cudNcc8011neCRpk2bZr9+cUXX7SPx6/M3+bMmWPuu+++fZ7/
3//+14wdO9Y+Fg3z6aef2seRV49fiVoY7LHo0RFdqzBSn6Bx/vnnHzNy5Ej7
eugRbMbfffed1ST8PGjQIHPTTTclrcaC9En8YDu7//77fQ8jVKh2tOpG+6B2
7drm3Xff9T0MEQKSsTYSB4D9BN1BLyj8Kk2bNs1a3y+55BIza9Ys88wzz9if
8QU5fYIm4ShTpoy1Y3A8/fTT+zyf72+99VbTvn17q4HwZzp9gp648sor7XPR
SWiXSCL1CfqjXbt25vrrr7fjIR7lrrvusu8xf/58+3d8QcmssSB9Ej/SJ3lH
151fMvXzr1Onjt37CZEbib5H/v77b3P++edb+wbgZyF2Ec0wYcIE8+qrr5qS
JUtaf81VV11lfSfY+5w++f333+3z+P7bb781r732mvURRT+f56FPqNdUsWJF
s2TJEquLFi1aZP92xx13WBsNfpvt27fvNUanTxhr3bp1zX/+8x/TokULM3To
UOsn2LBhg7UBoX2cfwe/0ZQpUxL6WTkydZ5KJNjX0KcidnTd+SVTP/969erZ
vZ8QuZHoe+T77783b7zxRtbP6Idx48aZP/74w37FRoFtA8gxI5YEewW5NK+8
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
bdpk6tatay644AJbX4k97r///W+bCwqsKR9//PFez7nzzjvjfl9ib4l7jYTY
12bNmtmcxKuvvtp8/vnnub7OZ599ZqpVq2YuvfRSWz9dBJdff/3VHHroob6H
IVLEwIEDzT333ON7GCIKrY9+0ecfG64mdZ8+fawNBUaPHm1rQLp+56z/xHpE
UrNmzbjfm7zDF154Ya/f1alTxzz//PM2HhdNVKVKlZhea8+ePaZz58623sK8
efPiHptIDvgMDznkEN/DECnimWeesT0ARbDQ+ugXff45wzpx6623mpIlS+7T
0wvbCXYL7Cnw1FNPmbPPPtt8/fXXWY+J1iebN2+2dSKvv/56m+8DY8aMsbqm
ZcuW1lZCXGvHjh3N3Xffbd+Tx2LzIC8HsNeQQxw9Fmw6V155pY21o17b8uXL
7XPwbfM/tG3bNiu/6O233zYnnXSS6dSpk/nzzz8T+6GJuJE+ySzGjh1rY+1F
sND66Bd9/vuH9b1s2bKmVatW1ncTycaNG03t2rWtfqhYsaL54osvYrKfUM/6
6aeftn02zjnnHLsO8Rpz5syx+oF91NChQ602WbRoke0PFm0/IVcIvREJ+Yn8
nhosaJAPPvjAvtf06dNNhw4d7Ptde+21ZsmSJVnPoVYlegbby/r16xP1sYkE
QN3hQoUK+R6GSBHc49yfIlhoffSLPv99YX3HH0w86YsvvpjtY7BJsP6jG+67
7z7bqy8WfcLfJ06caN5//30bq0rPdWJI3nrrLfue6JNVq1bZg5g53idanzA+
tJGze6Bx6tWrZ7/HzgJoq65du1ofUPfu3e378T32mWhGjBhhe9GNHDky/x+a
SChcFwULFvQ9DJEipk2bZi677DLfwxBRaH30iz7/vaGXKD1F0RWRfppIiD85
99xzs/qLog+qVq1qa37id/nqq6+yHouNBBsFx80332xzfJs3b259zegaYF5C
S+CTwceDjrjtttusj4ea9dhR6Lfu/Dvw6quvWp/TDTfcYMqUKWPefPNN+/to
fYLdh/dDF5FnvD9fDvaTypUr23GqB4h/qFdz8MEH+x6GSBFz5861844IFvGu
j/Q7YQ6PlS5duuT5PVgrXnvttayf2WfS/zpR9OvXz64LrEF8bdq0aa7PeeSR
RxLy3tIn/w98IfTO4bPNb29z4k9zqyGLvomuPU+dEnC1VPgaWVclu/pq6BXs
IS5eNycie7jvD7QL8Sgnn3yyeeedd3J9vEgenIt//etfvochUsTChQutb1YE
i3jWR+Zv8j3zcl7dOpAXiH9s0qRJ1s/EIl5xxRV5fp3cwM5PzmosxKJhYkH6
5H+29Pbt25tTTjnF2ioyHfZy1MZHy6O3ROqRPsksyME766yzfA9DRBHP+ohP
Hn89a7WrjUkNvgceeMDmSLAHjv6ZPkzA71q3bm1rR8yfP9/aSMi7JBYy0lYC
6AZ+T82INWvW2HhD9El2uRHEOFGXYt26dTYem79ddNFFdr9MzVH2pzyXvXo0
Tp8wTuqS8ljGDdTXYnzETdJ/jv+Z96e+Bq+bXzJdn3z66afmzDPPtD4QaoqL
/8G1fskll9h8JOJqRGpBFx500EG+hyFSBOtKuXLlfA9DRBHP+kivWPzu+Fqc
3wbbBrqFXAZs4tE/X3zxxWbt2rVZ/hls+cQm4VfZtm2bnRei45R4nzfeeMPG
ERITiS3OaYzo3AjiDXgNfE68LvB61PZCU7z++utm1qxZ2dp8nD7hwL5OjAH5
I06vkL+6dOlSm1961VVXWd0TraXySibrk8GDB9sYWOI9RPaQS8RnRP6jSB3s
PQ488EDfwxApgvqLp556qu9hZLFy5UprV3agn6JzGMMKdRio/R2LbTi/6yOx
i/h20B4c5EiiP/hcWf9Zu7FhRP5MrQr0CbmX1CiHJ554IkufuPhDHhMJ+gR7
K/oCXcB5Qp9klxvh4hPJzcBODsQlok+IL6G2BY8fNWrUPv+T0yfoHew5y5Yt
s3oHfcL/ge+BGEtqhTFeetOifeLpmRt2fcJ55DNBc8YKOpRzXL16dZsXnBeY
Rzj3jRs3tpqYmNhEk10dWsegQYOszdDhYmxzgl7G8YBtsnz58vY6zo9/VOQd
7vkDDjjA9zBEiiA+rEiRIr6HkQXrmdvDU+OAGIf8xuQFDeZucvfpb3XHHXfk
2Jcsv+sj+ZzYNBzkQ1BzivwH+higJVg7on922oM1jb9VqlTJzJgxI1d9Atgw
sJ84fZJdboTTJz/88INp0aKFjVuhvy3XH7aTNm3a2Hpb2eVyOn2yePFi+/rk
b5APsmDBArvG4O9hzNiCXPwJsbVDhgzJ12cIYdcnrJvYwallha2J9Tun2u1o
P2IruCYi82FipVGjRvY8woQJE6y+TTTZ5Sk7uM7pSezq3XPN5EYiYpXQ/oyJ
GB3shyK5EPOs3p2ZA75l1swdO3ZY+zj7AH7HekCvA2ItsWdwH7LvZ+6KJS4+
HvDvsqcnXoG9MntA4guIZWB8zEH8TNwBdSfDAvrE9cd1a8fpp59ubQrR+81k
rI/R61P0z+gKbA+cZzQHtbbiIbvcCF6Tc8o1hu3G2Ti4xly/lpzgmmR8XIPO
zsY1kWgNG3Z9gt0ssh8zPUuoG0E9EGx4ToNwzrmXyE1599138/VevEakX45z
wznmXBEH5GKYAJ2KvsS/SF8N4pCoY4LdjzxCdC26gXNKTBTj5DyjPyLr0OKD
4rWJkyLvl79jL3Q62OkT4pPYC5CjjL7ZsGGDfSzv6+LupkyZYjUuz81vL2P8
qezz2FsFuW9z2GG+CPu9KWIH3cH5pg7RUUcdZY488khTuHBhu8dnTmMNZV4j
55w1Fd8f+jWyDz2/4288hsfyHJ7La/BavCavzXvgs6VfB+vf/kCbMHc4Gy0x
DNzz1JLkd8RGMB/gL9lfvh89NOgBQr0menLg82C/z7zF3IhPgfURmwB6iLnp
8ssvt/tzfBXs75n72P+jk5g3mePY41NbgbhQ5k9iSbE58P8wD6OhqFnJnEgM
BnOoq8mNFolcM9xBP05i0kuUKJE1fl/3IHYH4lfxrycDbCnUGefzc7Upggif
Pz4S+spQD4x8ba477ESsQcT/YmvAl+HijFnjWHM53+ypOf9cB1wPXBesiVwn
2Iq4dvicuZa4pri2uMa41rnunM+M65HrkusTfcv1iq2Ca5j1nGuaa5trnGsd
nUCNEvoIZ3etcbAfcdcXazX3STz+CbRIdjWosaO4OCA+M/yK1BJBc1Bzbdy4
cVbLOB8j/y8Qv0QPH1e7npqh3IfOfsJ9z2eBzYfzwLXK/4H2YH545ZVX7H3O
tcbnCjyHc8P5cL4rarPw/nx2vBaxJC5OPD8Q603NXMZATF+FChWsHZL3of8g
fjPqw9SqVStrXuL8cR6Zj9xcxPl2+fT8327uwUbI58yc4+Ybri1yrJhnmGO4
t7gW0YNcn9gXuWaxqxIT37dvX/P444/bHgKcA+xqaD0+w+HDh9tYMj57dB22
bOLFJk2aZDUknytajnOKjRb7Kj5i5mXmW+y02DSxI+FzxV9MXBh2TerO4ItF
/7Hf5FxxPtlrojexlbPXZE+DjZX9stsro3O5BliruB6kT0QsoGW5v7lm2NNy
/bDXQUtwTWGD4friOmNvzDXHnh0/d27zIfqAuAVeizpL3Hsc1MBmHmCe4l4m
xyQ7uMaJaWBPiIbh3qEWJfcR9xPzEbYC1kjmQ+437NPce9yD7DG5H19++WVb
K5N7lPmW+5X7lrmVe5geIcRM4JegHxr3OPYQ7nfue8bLvu/JJ5+081V26wVa
Dn139NFHZ41f96Bf+PyZ46nl5eZ5Ymoi53p0i5vv8We4OZ/zHTnvcz24uZ/r
xM3/rIduDeDailwHiAF2awHXpVsPuF7dmkAcD9c01zbXONe6WxvIvYm+ztg3
sIdgTXS6gXUD3czaF2sOdzTc62eccUZWXBU1zdAL/P8u1ojPkjXJ2Te4L/g/
wPXrQecDcUTcf2gz5hPWsEh9whqHjiNeif+DddDpE9Yx1n20AHMP2g/QJKzd
6EHmH8BHyJzF43ktPsv8xlUzrxHzxL6K3Cfi5vi6YsUKuz6TS0a9fnyUvJeb
l3hPPiPmIzcXcb75DLgGmH/c3IN9iGuGOcfNN1xb+DH5PJljBgwYYK9FtLXT
1ZGa2ulpp6UjdbTT0E4/O+0cqZudZnZ62Wll9KDrYe00MjFi2LvQZ+hStBvX
JdcKc3qpUqVs7CO+sWLFitnejNig0NbsZd1emfkRTc21y15Yc6PwjYuddN+j
r5k7mNtZD5iLmAfZO4QF7mO3VmAvYb1gn8UaFu3b0D3ol7B//qzP/A/EEmKf
Y/5n3XJrcySs6axNrBWs9fmB9ZT1iTUNrcP9yj6CNQ17kuuRnpM+wX6IXY01
D63DeuxilVgfI+vQsqayX8HmwDzh9AmwL2FNA2xezBGMCc3gYphYh1k7gTUd
+wP6gufmFTQGPQVZ91UXRYj0hz2k289hR2EPy56A/RR2QOYd9gbUvAgLzK34
v9gbMJe5+TQ7grQ+YgsA9vpoRdaL/K5j+4O9X5AI0uefH/AX4HtFL8R6rti3
43vFNpTfGLPsaqXEYpdBn6Bj0CCReVeRuXwQWYcWm0UssbzR74/NJDpGhPfN
a9wI/iN8Oez792fHFUKIMIAPHFt8LHmvQVkf2XPir2CPzR6WsbN/ZV+bSMgN
zc/eNVkE5fPPL6zdnLO8gvYnhpaYFGwgqQJbS5hqibC3wG+BLUZ9eYQQmURQ
1kdi7fD/EzuE/R4fOntWdAtE5z6gM9izswfn98C6Q+xE9GOJlcAWg22MdRG/
d1AIyufvAzQoviDiALBjir0h3gwbKPEfQgiRaQRlfURLOFs/sX7EieI7IG40
u9wH1jXiicHlUODXd3GLkY/Fbx9ZR4uYuqAQlM/fJ9RCo0YN+SLEwGY6xIih
p8nJIRdJCCEykaCsj9j50SHkeZBP4CAnEptKdO4D+sTVqSJnhVhmNEh2eRJ8
xXfkIB8gKATl8/cNugS7FrkW+6vdmh/IZUKzksNCjgg6ONG2Gmx50fEr+YW8
WWrEEOeL5hZCiEwlKOsjuQ/kZqJRiI3Fd0OuBPG9EJ37EKlPiJUkZ9r1UYt+
bKQ+YW9KPYegEJTPPyigTaldhN6Mp28AEIdKLCyQr8p6z/mn7kci6+xReyNS
/+YHfJn4H6mtS063EEJkOkFZH/HpRObWULcmek+al9yH/T0WX348/YYTTVA+
/yBBfDd1xYhDiqduMzVenC2O16L+B7YU4py4tqL7Wbs4JTSxq+FGTRFqz0Q/
1tUlpqYi8H1+IaeIHGRymKmnJIQQIljrY6RfJ8zvkReC9PkHCexo1P0idja/
tczQGatWrbLfkyNEzWJsJ+SHYT+J7mcdGadE3RJiP7DDUf8o+rHoZ/KPHPgh
8xM7Qy499qJ4ejgJIUQ6ovXRL/r8c4Y8rpIlS1qfXF7rhvAc8reoS4K/yEF9
V2rfRvezjvQD4rMhp4y6bxD9WPQJtdgc2FXy0u8Q+x62F+qcOg0lhBDi/6H1
0S/6/HMHfUE8EvXxiZ+OFWr7u1hY8sDw2WAfwYdDbEt0P+voOGp8LtR9h+jH
RusTp2NiAW1ErXVq0yYqrlYIIdINrY9+0ecfO/SHwRdC76FYYmeJEUEDONAC
0f24Yu1nndNjsbWgWXIDnxI9ak444QRbp0cIIcT+0froF33+eYMetNSvoZcO
PWhzAx2QbBsFPYFyyweiFnJexi2EEJmO1ke/6PPPO2GzQ2D3Ic43VruPEEII
Y3u7uV7HOlJ/8PmL/BH0OI78xs0IIYQQItwENQ8mnrwjIYQQQqQH1BGhl97g
wYO9joO6LX369DHHH398vuu2CCGEECJ9oD9C9erVbR3Wbdu2pfz9Xd1b+j9t
2rQp5e8vhBBCiGAS2ceGHtapIpF9g4QQQgiRnrz77rumWLFitg8wPa2TRbL6
LgshhBAiPaGWGrViK1WqZNauXZvw10ePlC5d2rRu3TpfvXeEEEIIkbmMHj3a
xs4OHz48Ia+H/4Zeg8TAuvr5QgghhBB5ZePGjaZq1aq2f/GOHTvy/TqbN282
9evXtz2Mv/nmmwSOUAghhBCZyJ49e2xP4pNOOsn2Aswr06ZNszVre/XqZfOI
hRBCCCESBdoEjYJWQbPkxu+//27atm1rSpQoYZYsWZKCEQohhBAiE8HHg68H
nw++n/2xcuVKc8YZZ5iWLVvaevVCCCGEEMmGmFliZ4mhjYQY2Keeesr+bcKE
CZ5GJ4QQQohMhdxjcpCbNm1qdu3aZbZu3WoaNWpkatSoYb766ivfwxNCCCFE
hkINt7vvvtvWMylSpIh5+OGHzd9//+17WEIIIYQQZsaMGWbhwoW+hyGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQogU8P8BAa2lQg==
     "], {{0, 703}, {552, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{552, 703},
   PlotRange->{{0, 552}, {0, 703}}]], "Input"]
}], "Text",
 CellChangeTimes->{
  3.54196054097891*^9, 3.541962858316513*^9, {3.541963127891933*^9, 
   3.5419632325437*^9}, {3.5419636090012283`*^9, 3.5419637477843723`*^9}, {
   3.54196388725815*^9, 3.541963901243835*^9}, {3.541964154333625*^9, 
   3.5419642082336807`*^9}, {3.541966526125601*^9, 3.541966555784972*^9}, {
   3.5419666313707314`*^9, 3.541966765802828*^9}, {3.541966837825034*^9, 
   3.541966929789654*^9}, {3.541967035888969*^9, 3.541967046200871*^9}, {
   3.541991784026989*^9, 3.541991879731529*^9}, {3.541995843356963*^9, 
   3.541995850687038*^9}, {3.543971201703968*^9, 3.5439712177685537`*^9}, {
   3.543971274801057*^9, 3.543971280133644*^9}, {3.543971429721778*^9, 
   3.543971435983424*^9}, {3.543973949296904*^9, 3.543974000511821*^9}, {
   3.5439827163138657`*^9, 3.543982723282206*^9}}],

Cell[CellGroupData[{

Cell["Client", "Subsection",
 CellChangeTimes->{{3.541967094171754*^9, 3.5419670957753563`*^9}, {
  3.543971426272151*^9, 3.543971427400078*^9}}],

Cell["\<\
The Client has three modes of operation: Job submission, Server statistics \
querying, ComputeNode statistics querying.
Job submission reads a file of integers separated by newlines. This file is \
converted to a list and submited to the server.
Querying for Server or ComputeNode statistics is done via contacting either \
the Server and/or ComputeNode. In the case of ComputeNode statistics, the \
Client will lookup the ComputeNode address with a ComputeNode ID through an \
interface provided by the Server. Once the address has been found, it will \
contact the ComputeNode directly for statistics querying. \
\>", "Text",
 CellChangeTimes->{
  3.54196054097891*^9, 3.541962858316513*^9, {3.541963127891933*^9, 
   3.5419632325437*^9}, {3.5419636090012283`*^9, 3.5419637477843723`*^9}, {
   3.54196388725815*^9, 3.541963901243835*^9}, {3.541964154333625*^9, 
   3.5419642082336807`*^9}, {3.541966526125601*^9, 3.541966555784972*^9}, {
   3.5419666313707314`*^9, 3.541966765802828*^9}, {3.541966837825034*^9, 
   3.541966929789654*^9}, {3.541967035888969*^9, 3.541967046200871*^9}, 
   3.541967608666564*^9, {3.5419682499674473`*^9, 3.541968559508731*^9}, {
   3.541991898518592*^9, 3.541991953345046*^9}, {3.54397130954111*^9, 
   3.543971424280858*^9}, 3.543974028386221*^9, {3.543974166137991*^9, 
   3.5439744317298203`*^9}, {3.543982829083959*^9, 3.5439828416737022`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Server", "Subsection",
 CellChangeTimes->{{3.541967618844926*^9, 3.541967620275559*^9}, {
  3.543974455706092*^9, 3.543974456497278*^9}}],

Cell["\<\
The Server organizes a Job into a set of sort Tasks and assigns them to \
ComputeNodes. When a Job is submitted by a Client, it is divided into equally \
sized sort Tasks according to how many ComputeNodes have registered prior to \
the Client submitting the Job. These sort Tasks are assigned to ComputeNodes.

ComputeNodes are expected to check-in (via a heartbeat) with the Server \
periodically. When a ComputeNode fails to check-in, it is considered dead. If \
a ComputeNode is dead, the Server will re-assign its sort Tasks to another \
ComputeNode. If no ComputeNodes remain, the Server will notify the Client \
that the Job failed to execute.

The Server waits for all outstanding sort Tasks to complete. When this \
occurs, the Server constructs a merge Task and assigns it to one ComputeNode. \
When the merge Task is complete, the Server will submit the result to the \
Client as a list.

The Server maintains statistics that can be queried by the Client.\
\>", "Text",
 CellChangeTimes->{
  3.54196054097891*^9, 3.541962858316513*^9, {3.541963127891933*^9, 
   3.5419632325437*^9}, {3.5419636090012283`*^9, 3.5419637477843723`*^9}, {
   3.54196388725815*^9, 3.541963901243835*^9}, {3.541964154333625*^9, 
   3.5419642082336807`*^9}, {3.541966526125601*^9, 3.541966555784972*^9}, {
   3.5419666313707314`*^9, 3.541966765802828*^9}, {3.541966837825034*^9, 
   3.541966929789654*^9}, {3.541967035888969*^9, 3.541967046200871*^9}, {
   3.541967608666564*^9, 3.5419676340662203`*^9}, {3.541968619374741*^9, 
   3.541968644290924*^9}, {3.541968676315637*^9, 3.541969006111023*^9}, {
   3.541969405450097*^9, 3.541969590853694*^9}, {3.541969736870202*^9, 
   3.541969828635178*^9}, {3.5419698648531523`*^9, 3.541969909313698*^9}, {
   3.541969940774293*^9, 3.5419699504538937`*^9}, {3.541970171660236*^9, 
   3.541970204904498*^9}, {3.541970460821574*^9, 3.5419704858942137`*^9}, {
   3.541970546588963*^9, 3.541970560905692*^9}, {3.5419705952498703`*^9, 
   3.541970626683984*^9}, {3.5419706588939*^9, 3.541970905389645*^9}, {
   3.5419711099169397`*^9, 3.5419712630631638`*^9}, {3.5419713068160763`*^9, 
   3.5419713580309153`*^9}, {3.541991965537837*^9, 3.541991969997553*^9}, {
   3.5419925626338882`*^9, 3.54199260460466*^9}, {3.541992649614204*^9, 
   3.541992834858283*^9}, {3.5419958520666733`*^9, 3.541995865649213*^9}, {
   3.543974462934988*^9, 3.543974947010788*^9}, {3.543975028540762*^9, 
   3.5439750630569143`*^9}, {3.543982886968831*^9, 3.54398290984594*^9}, {
   3.543982945558907*^9, 3.54398299508405*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["ComputeNode", "Subsection",
 CellChangeTimes->{{3.541967639475605*^9, 3.541967642153799*^9}, {
  3.543974955953919*^9, 3.543974958281389*^9}}],

Cell["\<\
ComputeNodes are the most complex components in this System. On startup, they \
register with the Server and are assigned a ID. From this point on they are \
expected to check-in with the Server periodically.

When assigned a sort Task, the ComputeNode checks whether its load is below \
some threshhold set either through a command-line argument or a configuration \
file. If it is below this threshhold, sorting begins. If not, the Client will \
search for a peer ComputeNode willing to accept the sort Task. If one is \
found, the sort Task is re-assigned. If none are found, the sort Task is \
executed. Processor load is simulated based on command-line arguments. The \
two simulation arguments correspond to a constant value or a randomly chosen \
value based on a Gaussian distribution. For the latter, a mean and variance \
must be provided.

A ComputeNode may fail if it is currently executing a sort Task. Failure is \
probabilistic and can be set via command-line arguments or through a \
configuration file. The sort Task is forced to take at least two seconds. The \
failure test executes every one second. Therefore each ComputeNode had at \
least two chances to fail during a sort Task. 

Completed sort Tasks are returned to the Server.

When assign a merge Task, the ComputeNode merges it and returns it to the \
Server.

Each sort and merge Task is allocated in its own thread.\
\>", "Text",
 CellChangeTimes->{
  3.54196054097891*^9, 3.541962858316513*^9, {3.541963127891933*^9, 
   3.5419632325437*^9}, {3.5419636090012283`*^9, 3.5419637477843723`*^9}, {
   3.54196388725815*^9, 3.541963901243835*^9}, {3.541964154333625*^9, 
   3.5419642082336807`*^9}, {3.541966526125601*^9, 3.541966555784972*^9}, {
   3.5419666313707314`*^9, 3.541966765802828*^9}, {3.541966837825034*^9, 
   3.541966929789654*^9}, {3.541967035888969*^9, 3.541967046200871*^9}, {
   3.541967608666564*^9, 3.5419676340662203`*^9}, 3.541967736008357*^9, 
   3.541971377897395*^9, {3.5419715043822107`*^9, 3.541971540557084*^9}, {
   3.5419721234651527`*^9, 3.541972164474308*^9}, {3.5419722422044287`*^9, 
   3.5419723221149797`*^9}, {3.541972556386627*^9, 3.541972611324582*^9}, {
   3.5419727663447323`*^9, 3.541972827910111*^9}, {3.541972898271171*^9, 
   3.5419732251319637`*^9}, {3.54197345245681*^9, 3.541973589534484*^9}, {
   3.541992876393126*^9, 3.5419931214301357`*^9}, 3.5419958668500423`*^9, {
   3.5439750701818657`*^9, 3.543975111544138*^9}, {3.543975150868431*^9, 
   3.543975729429337*^9}, {3.543976294508932*^9, 3.5439763614797497`*^9}, {
   3.543983022078196*^9, 3.5439830226247253`*^9}, {3.5439830692754908`*^9, 
   3.543983221351769*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Section",
 CellChangeTimes->{{3.5419677443501663`*^9, 3.541967746273555*^9}}],

Cell["\<\
Testing was done almost exclusively in an automated fashion. Due to load \
simulation parameters, incorrect operation could be repeated with some \
accuracy.

Our testing regime involved two scripts. The RunTest.sh script would run a \
test with an arbitrary number of ComputeNodes with potentially different \
fail, load, and threshhold parameters. This script is employed by \
TestBattery.sh to systematically explore  the parameter space. Correct \
operation can generally be determined by Job completion or correct sort \
results. The latter is checked against the standard UNIX sort utility. Our \
submitted implementation has operated correctly under all tested scenarios. 

What follows are the parameters explored by TestBattery.sh(the current value \
sets are in brackets):
\[Bullet] Number of ComputeNodes [1,2,4,8]
\[Bullet] Fail Probabilities [0 2 4 8 16 32]
\[Bullet] Load Threshhold [100 80 60 50]
\[Bullet] Cardinality of Sort Set [500]
\[Bullet] Gaussian Load Simulator [(mean=50,variance=10)]
\[Bullet] Iterations per-parameter point [3]

For any given test, all ComputeNodes had the same parameters.
For each test, the output from all components were collect in the results \
directory.\
\>", "Text",
 CellChangeTimes->{
  3.54196054097891*^9, 3.541962858316513*^9, {3.541963127891933*^9, 
   3.5419632325437*^9}, {3.5419636090012283`*^9, 3.5419637477843723`*^9}, {
   3.54196388725815*^9, 3.541963901243835*^9}, {3.541964154333625*^9, 
   3.5419642082336807`*^9}, {3.541966526125601*^9, 3.541966555784972*^9}, {
   3.5419666313707314`*^9, 3.541966765802828*^9}, {3.541966837825034*^9, 
   3.541966929789654*^9}, {3.541967035888969*^9, 3.541967046200871*^9}, {
   3.541967608666564*^9, 3.5419676340662203`*^9}, {3.541967736008357*^9, 
   3.54196776992101*^9}, {3.541973743830125*^9, 3.541973775484021*^9}, {
   3.5419739219870777`*^9, 3.541974269765963*^9}, {3.5419743293575706`*^9, 
   3.541974330459838*^9}, {3.541974641377342*^9, 3.541974935152289*^9}, {
   3.541975114017797*^9, 3.541975336045371*^9}, {3.541975396771371*^9, 
   3.541975468409895*^9}, {3.541975511691205*^9, 3.541975868828244*^9}, {
   3.541976068613574*^9, 3.541976105274535*^9}, {3.541976178664176*^9, 
   3.5419766836442013`*^9}, {3.541976715974133*^9, 3.541976779573214*^9}, {
   3.541993142277829*^9, 3.541993144231552*^9}, {3.5419931865582733`*^9, 
   3.541993295323606*^9}, {3.54199334161484*^9, 3.541993466733687*^9}, {
   3.5419935495684443`*^9, 3.541993561101725*^9}, {3.541995872536353*^9, 
   3.5419958843025007`*^9}, {3.5439757623726797`*^9, 
   3.5439761819888277`*^9}, {3.5439762134006157`*^9, 3.543976278327507*^9}, {
   3.5439763720547647`*^9, 3.543976632589779*^9}, {3.543983268141011*^9, 
   3.5439833102463627`*^9}, {3.543983341965885*^9, 3.543983585537602*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Performance Evaluation", "Section",
 CellChangeTimes->{{3.5419677812419033`*^9, 3.5419677859107847`*^9}}],

Cell["\<\

In the Testing Section, an automated testing script was described. This \
script was also used to generate performance data.
In this section, a few interesting charts will be exposed.  All of the data \
that will be charted was retrieved from performance measurements where the \
Client, Server, and ComputeNode were on the same host.

The first results we will look at is strict sorting performance as a fucntion \
of the number of ComputeNodes. The results are predictably poor. Sorting is a \
relatively easy task at small input sizes, the overhead of marshalling the \
data to more ComputeNodes overcomes the benefit of concurrency. This \
marshalling penalty is most noticeable prior to the merge Task. The server \
needs to wait for eight different sort Tasks(in the worst case) to complete \
before being able to merge.
\
\>", "Text",
 CellChangeTimes->{
  3.54196054097891*^9, 3.541962858316513*^9, {3.541963127891933*^9, 
   3.5419632325437*^9}, {3.5419636090012283`*^9, 3.5419637477843723`*^9}, {
   3.54196388725815*^9, 3.541963901243835*^9}, {3.541964154333625*^9, 
   3.5419642082336807`*^9}, {3.541966526125601*^9, 3.541966555784972*^9}, {
   3.5419666313707314`*^9, 3.541966765802828*^9}, {3.541966837825034*^9, 
   3.541966929789654*^9}, {3.541967035888969*^9, 3.541967046200871*^9}, {
   3.541967608666564*^9, 3.5419676340662203`*^9}, {3.541967736008357*^9, 
   3.54196776992101*^9}, {3.541976793947877*^9, 3.541976847953786*^9}, {
   3.5419841961999283`*^9, 3.541984428219442*^9}, {3.541984485778385*^9, 
   3.541984489157033*^9}, {3.541985678707439*^9, 3.5419856824797153`*^9}, {
   3.541986034291396*^9, 3.541986355458919*^9}, {3.541986400304564*^9, 
   3.541986482895487*^9}, {3.541986551201684*^9, 3.541986554864498*^9}, {
   3.541986773833935*^9, 3.541986923584393*^9}, {3.541986997515374*^9, 
   3.5419873403093*^9}, {3.5419873787159348`*^9, 3.5419876082058077`*^9}, {
   3.541993599029007*^9, 3.5419939809098787`*^9}, {3.541995885811831*^9, 
   3.541995909818874*^9}, {3.543976660030332*^9, 3.5439767057438707`*^9}, {
   3.543980534275591*^9, 3.543980534942801*^9}, 3.543981581272067*^9, {
   3.543981613885365*^9, 3.5439816726972103`*^9}, {3.543981797592544*^9, 
   3.543982005226161*^9}, {3.543983627038363*^9, 3.543983746912565*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", " ", 
   RowBox[{"NotebookDirectory", "[", "]"}], " ", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", " ", "[", "\"\<results/results.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Take", " ", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "7"}], "}"}]}], "]"}], ",", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"9", ",", "10"}], "}"}]}], "]"}]}], "]"}], " ", "&"}], ",",
      " ", "data"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Sort", "[", "data", "]"}], ",", "Last"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"a", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}], ",", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "4", "}"}]}], "]"}]}], "]"}], " ", "&"}], ",", "a"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   RowBox[{"GatherBy", "[", 
    RowBox[{"b", ",", "First"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "  ", 
   RowBox[{"Map", " ", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Median", "[", 
         RowBox[{"Last", "[", "#", "]"}], "]"}]}], "}"}], " ", "&"}], ",", 
     " ", "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"c", ",", 
   RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", " ", 
   RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<ComputeNodes\>\"", ",", "\"\<Time(s)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.5439816953100567`*^9, 3.543981782917403*^9}}],

Cell[BoxData[
 GraphicsBox[
  GraphicsComplexBox[{{1., 9.015}, {2., 13.04}, {4., 12.585}, {8., 16.92}, {
   1., 0.}, {8., 0.}}, {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[{{1, 5, 6, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[{1, 2, 3, 4}]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"ComputeNodes\"", TraditionalForm], 
    FormBox["\"Time(s)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{0., 8.}, {0, 16.92}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.543981704346868*^9, 3.54398178432099*^9}, 
   3.54398201560753*^9}]
}, Open  ]],

Cell["\<\
I assume a goal of this assignment was to impress upon us how failure \
recovery impacts performance. The next chart illustrates the intuitive notion \
that as ComputeNode failure probability increases, so will Job time. The \
Server must first notice that a ComputeNode has not checked in and then \
re-assign the failed ComputeNode\[CloseCurlyQuote]s Tasks. In otherwords, the \
cost of robustness is paid in performance efficiency.\
\>", "Text",
 CellChangeTimes->{{3.5439820574381742`*^9, 3.5439822487656593`*^9}, {
  3.543983764253153*^9, 3.543983857523035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", "=", " ", 
     RowBox[{"GatherBy", "[", 
      RowBox[{
       RowBox[{"Sort", "[", "data", "]"}], ",", "Last"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", " ", "=", " ", 
     RowBox[{"a", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "All"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", 
          RowBox[{"Take", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "4", "}"}]}], "]"}]}], "]"}], " ", "&"}], ",", "a"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", " ", "=", " ", 
     RowBox[{"GatherBy", "[", 
      RowBox[{
       RowBox[{"Sort", "[", "b", "]"}], ",", "First"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", "  ", 
     RowBox[{"Map", " ", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"Median", "[", 
           RowBox[{"Last", "[", "#", "]"}], "]"}]}], "}"}], " ", "&"}], ",", 
       " ", "c"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"c", ",", 
     RowBox[{"Filling", " ", "\[Rule]", " ", "Axis"}], ",", " ", 
     RowBox[{"AxesLabel", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<FailureProb\>\"", ",", "\"\<Time(s)\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.541890859495824*^9, 3.541890883194689*^9}, {
   3.541891104915201*^9, 3.541891107632455*^9}, 3.5418912032461643`*^9, {
   3.541891361666171*^9, 3.541891365664485*^9}, {3.541891415423374*^9, 
   3.541891460972451*^9}, {3.541891687452504*^9, 3.5418916915085793`*^9}, 
   3.541891745091523*^9, {3.541892471829247*^9, 3.541892545229867*^9}, {
   3.541892654673924*^9, 3.541892655576828*^9}, {3.541892722663896*^9, 
   3.5418927488190727`*^9}, {3.541892800136468*^9, 3.541892890343186*^9}, {
   3.54189324493891*^9, 3.5418932587522917`*^9}, {3.541893481767272*^9, 
   3.5418935229198933`*^9}, {3.541893566717599*^9, 3.54189365425084*^9}, {
   3.541893770500207*^9, 3.541893846719468*^9}, {3.54189390955982*^9, 
   3.541893929865405*^9}, {3.541894217149338*^9, 3.541894271109123*^9}, {
   3.541894316797352*^9, 3.541894387497815*^9}, {3.5418949327433643`*^9, 
   3.541894972351659*^9}, {3.541895007901434*^9, 3.5418950727022057`*^9}, {
   3.541895243942531*^9, 3.541895386946259*^9}, {3.541895513122287*^9, 
   3.541895526483913*^9}, {3.5418955711930656`*^9, 3.541895712685998*^9}, {
   3.541895838539557*^9, 3.541895906821677*^9}, {3.541895949127159*^9, 
   3.541895969093457*^9}, {3.541896024951941*^9, 3.541896031350896*^9}, {
   3.541896129867909*^9, 3.541896149837487*^9}, {3.54189624022859*^9, 
   3.5418964142214108`*^9}, {3.541896448572443*^9, 3.541896539671607*^9}, {
   3.5418965796208677`*^9, 3.5418966977790747`*^9}, {3.541896732803811*^9, 
   3.5418967659285727`*^9}, {3.541896848232604*^9, 3.541896956723578*^9}, {
   3.541896997777165*^9, 3.541896998873317*^9}, {3.5418970452227087`*^9, 
   3.541897068325676*^9}, 3.541897141509141*^9, {3.5418971994473343`*^9, 
   3.541897319355831*^9}, {3.5418973898803673`*^9, 3.541897391847765*^9}, {
   3.541897426230549*^9, 3.541897470180724*^9}, {3.541897522590661*^9, 
   3.541897522989094*^9}, {3.5418976248670807`*^9, 3.54189762503654*^9}, {
   3.541897663011608*^9, 3.54189767021094*^9}, {3.541897928664406*^9, 
   3.541897953366912*^9}, {3.5418980343345613`*^9, 3.5418982166522923`*^9}, {
   3.541898539909564*^9, 3.54189867237647*^9}, {3.541898722859207*^9, 
   3.541898982342984*^9}, 3.54189901658211*^9, {3.5418990656471243`*^9, 
   3.541899209653882*^9}, {3.5418992441603527`*^9, 3.541899244617845*^9}, {
   3.5418993420808907`*^9, 3.541899360537569*^9}, {3.541903115610942*^9, 
   3.5419031160338078`*^9}, {3.5419031468761787`*^9, 3.541903157945902*^9}, {
   3.5419051506707363`*^9, 3.541905193095476*^9}, {3.541905229726513*^9, 
   3.5419052521229057`*^9}, {3.541905289377933*^9, 3.541905301219254*^9}, {
   3.541905337468308*^9, 3.541905341389391*^9}, {3.541911846509821*^9, 
   3.541911961459003*^9}, {3.541912008903906*^9, 3.541912074419249*^9}, {
   3.541912366868319*^9, 3.541912468162622*^9}, {3.5419125140875273`*^9, 
   3.541912763558765*^9}, {3.541912804825592*^9, 3.5419128555760098`*^9}, {
   3.5419128879248667`*^9, 3.541912888577526*^9}, {3.5419129383156443`*^9, 
   3.541913039182399*^9}, {3.541913148450254*^9, 3.541913247048498*^9}, {
   3.5419133201234703`*^9, 3.541913385433064*^9}, 3.54194950241494*^9, {
   3.5419495575972633`*^9, 3.541949574015464*^9}, {3.541949604390036*^9, 
   3.541949788238207*^9}, {3.5419780308518677`*^9, 3.5419782176628447`*^9}, {
   3.541978256567759*^9, 3.541978269573421*^9}, {3.5419783112080927`*^9, 
   3.541978373133823*^9}, {3.541978412935028*^9, 3.541978474775466*^9}, {
   3.5419785450112886`*^9, 3.541978551296774*^9}, {3.541978722397888*^9, 
   3.5419791683208323`*^9}, {3.541979219468719*^9, 3.54197951797493*^9}, 
   3.541979571910693*^9, {3.541979602470562*^9, 3.541979682587863*^9}, {
   3.541979787458955*^9, 3.5419798247802896`*^9}, {3.5419798658615913`*^9, 
   3.541979951398144*^9}, {3.541980162282771*^9, 3.541980167253846*^9}, {
   3.54198031736414*^9, 3.541980324764227*^9}, {3.541980394563469*^9, 
   3.541980498654718*^9}, {3.541980542174341*^9, 3.5419805660211563`*^9}, {
   3.5419806039330053`*^9, 3.5419806653096027`*^9}, {3.5419807115930862`*^9, 
   3.541980739460655*^9}, {3.541980780264892*^9, 3.541980802540924*^9}, {
   3.54198084364817*^9, 3.5419809158083353`*^9}, 3.5419809572406397`*^9, {
   3.541981016676865*^9, 3.5419810224301243`*^9}, {3.541981103701764*^9, 
   3.5419811226681957`*^9}, {3.541981162627819*^9, 3.541981218617805*^9}, {
   3.5419812560326643`*^9, 3.541981296329002*^9}, {3.5419813724364433`*^9, 
   3.541981375973844*^9}, {3.541981444766095*^9, 3.541981543019199*^9}, {
   3.541981651267178*^9, 3.54198180840742*^9}, 3.541981856985139*^9, {
   3.54198196287501*^9, 3.541981975789609*^9}, {3.5419820082591763`*^9, 
   3.541982020692258*^9}, {3.541982064549594*^9, 3.541982083022415*^9}, {
   3.5419821187660713`*^9, 3.541982265291787*^9}, {3.541982320477293*^9, 
   3.54198249462536*^9}, {3.541982534874248*^9, 3.541982660424947*^9}, {
   3.5419828140295753`*^9, 3.54198281410216*^9}, {3.5419830051444483`*^9, 
   3.541983061661222*^9}, {3.541983198216887*^9, 3.541983200197879*^9}, {
   3.541983237292597*^9, 3.541983808114077*^9}, {3.541983854380651*^9, 
   3.541983865241281*^9}, {3.541983908620739*^9, 3.5419839215978327`*^9}, {
   3.541984000627508*^9, 3.54198400646463*^9}, {3.5419840931679373`*^9, 
   3.54198412569807*^9}, {3.541984187474841*^9, 3.541984188528686*^9}, {
   3.541984558557007*^9, 3.5419847122831*^9}, {3.541985760161571*^9, 
   3.541985773987183*^9}, {3.5419858838197327`*^9, 3.541986027281159*^9}, {
   3.5419866978380823`*^9, 3.541986700860026*^9}, {3.5419867480860147`*^9, 
   3.541986758469021*^9}, {3.5419890335189962`*^9, 3.5419890615458527`*^9}, {
   3.541990787652822*^9, 3.541990806438326*^9}, 3.541994053464349*^9, {
   3.5439767990267267`*^9, 3.543976829049358*^9}, {3.5439769204856873`*^9, 
   3.543976974489264*^9}, {3.543977046183395*^9, 3.5439771244120407`*^9}, {
   3.543977166426013*^9, 3.543977172878295*^9}, {3.543977222716507*^9, 
   3.543977264906426*^9}, {3.543977348875802*^9, 3.543977378653035*^9}, {
   3.543977445248328*^9, 3.5439775622614594`*^9}, {3.543977602692807*^9, 
   3.543977613367899*^9}, {3.5439776462318563`*^9, 3.543977831457161*^9}, {
   3.543977981353451*^9, 3.543978079097777*^9}, {3.543978168642591*^9, 
   3.54397820672038*^9}, {3.543978272781299*^9, 3.543978273071521*^9}, {
   3.543978303317648*^9, 3.543978403635502*^9}, {3.543978470606254*^9, 
   3.543978522298561*^9}, {3.543978610062541*^9, 3.543978710391189*^9}, 
   3.543978748430789*^9, {3.5439787939971647`*^9, 3.5439788515699043`*^9}, {
   3.543978887681198*^9, 3.543978890428344*^9}, {3.543978931211104*^9, 
   3.5439789610014*^9}, {3.543979022119104*^9, 3.543979125356845*^9}, {
   3.543979168011705*^9, 3.54397928848734*^9}, {3.543979389358943*^9, 
   3.54397938987971*^9}, {3.543979510643505*^9, 3.543979580652131*^9}, {
   3.54397965809352*^9, 3.5439796792674093`*^9}, {3.543979728355288*^9, 
   3.543979738578507*^9}, 3.543979803874394*^9, {3.5439804189970837`*^9, 
   3.543980441258173*^9}, {3.5439805439697533`*^9, 3.543980638502335*^9}, {
   3.5439806878589582`*^9, 3.543980767091922*^9}, {3.543980798440624*^9, 
   3.543980811947665*^9}, 3.5439808912322817`*^9, {3.543980928258479*^9, 
   3.5439811046641006`*^9}, {3.5439812189878798`*^9, 3.543981259841117*^9}, {
   3.543981316974374*^9, 3.5439813182359343`*^9}, {3.543981360442328*^9, 
   3.543981471326764*^9}, 3.5439820404385023`*^9, {3.543982271912259*^9, 
   3.543982290094062*^9}}],

Cell[BoxData[
 GraphicsBox[
  GraphicsComplexBox[{{50., 40.355000000000004`}, {60., 53.375}, {80., 
   56.129999999999995`}, {100., 63.735}, {50., 39.}, {100., 39.}}, {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[{{1, 5, 6, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[{1, 2, 3, 4}]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"FailureProb\"", TraditionalForm], 
    FormBox["\"Time(s)\"", TraditionalForm]},
  AxesOrigin->{50., 39.},
  PlotRange->{{50., 100.}, {39., 63.735}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5439769656724577`*^9, 3.543977128907262*^9, {3.5439771696683607`*^9, 
   3.543977173976972*^9}, {3.543977226243037*^9, 3.5439772662001953`*^9}, {
   3.5439773506886187`*^9, 3.543977379133716*^9}, {3.543977450497431*^9, 
   3.543977508897394*^9}, 3.543977563913147*^9, 3.543977616555313*^9, {
   3.5439776571734858`*^9, 3.5439778321523237`*^9}, {3.5439779833498573`*^9, 
   3.543978079835906*^9}, {3.543978195296282*^9, 3.543978207257556*^9}, 
   3.543978275957851*^9, {3.5439783228990107`*^9, 3.543978404875991*^9}, {
   3.543978473358198*^9, 3.543978523134637*^9}, 3.543978644235577*^9, {
   3.543978677923957*^9, 3.543978711730473*^9}, 3.543978749853525*^9, 
   3.543978852485901*^9, 3.54397893559159*^9, 3.543978971206615*^9, 
   3.543979022647382*^9, {3.543979069593679*^9, 3.543979075232939*^9}, 
   3.5439791260553493`*^9, {3.543979168966715*^9, 3.543979239993235*^9}, 
   3.5439792909868517`*^9, 3.543979392137868*^9, {3.543979511854849*^9, 
   3.5439795366090918`*^9}, 3.543979582104158*^9, {3.5439796586430693`*^9, 
   3.543979679945485*^9}, {3.543979729011413*^9, 3.543979738964422*^9}, 
   3.54397980488725*^9, {3.543980425980789*^9, 3.5439804416545057`*^9}, {
   3.5439805445417*^9, 3.5439806390944157`*^9}, {3.543980704985358*^9, 
   3.543980768574575*^9}, {3.5439808013050137`*^9, 3.543980812427176*^9}, 
   3.543980893637105*^9, 3.543980929990347*^9, {3.54398098775185*^9, 
   3.5439811051631937`*^9}, {3.5439812198996983`*^9, 3.543981243378418*^9}, 
   3.543981319408497*^9, 3.5439813808237953`*^9, {3.54398141392448*^9, 
   3.543981474975726*^9}, 3.543982042907833*^9, {3.543982276559273*^9, 
   3.543982292139426*^9}}]
}, Open  ]],

Cell["\<\
The benefits of multiple ComputeNodes can be seen in robustness to failure.  \
This final histogram shows how the number of successfully executed Jobs \
increased with the number of ComputeNodes.\
\>", "Text",
 CellChangeTimes->{{3.541984762893957*^9, 3.541984763334485*^9}, {
   3.541987672198607*^9, 3.541987851987144*^9}, {3.54198790793267*^9, 
   3.541987956600381*^9}, {3.541994084573058*^9, 3.541994223048725*^9}, 
   3.541995914573291*^9, {3.543982303483019*^9, 3.543982407418138*^9}, {
   3.543983884641675*^9, 3.5439838907108994`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"GatherBy", "[", 
    RowBox[{
     RowBox[{"Sort", "[", "data", "]"}], ",", "Last"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"a", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"First", "[", "#", "]"}], "}"}], ",", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "4", "}"}]}], "]"}]}], "]"}], " ", "&"}], ",", "a"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{"Sort", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}], "]"}], " ", "&"}], ",", "a"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"b", ",", "4"}], "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.541984745615302*^9, 3.5419847849989557`*^9}, {
   3.541985689629044*^9, 3.541985738719078*^9}, {3.541986607464574*^9, 
   3.541986685454274*^9}, {3.5419867270061827`*^9, 3.54198673368368*^9}, {
   3.541987618776557*^9, 3.5419876226217012`*^9}, {3.541987659778977*^9, 
   3.541987669088684*^9}, {3.541987861460346*^9, 3.541987862559884*^9}, {
   3.541989066870346*^9, 3.5419890702706537`*^9}, {3.543979431941689*^9, 
   3.543979502904498*^9}, {3.543979608327941*^9, 3.54397961771559*^9}, {
   3.5439797067298326`*^9, 3.5439797127254667`*^9}, {3.543979757098741*^9, 
   3.5439797581774063`*^9}, {3.543979882058669*^9, 3.5439798911109543`*^9}, {
   3.543979948130921*^9, 3.543979960817028*^9}, {3.543980005236277*^9, 
   3.543980090194007*^9}, {3.54398019790926*^9, 3.543980271932399*^9}, {
   3.543980308262877*^9, 3.543980336160611*^9}, {3.543980379577755*^9, 
   3.5439803796340103`*^9}, {3.543980451935841*^9, 3.543980501320653*^9}, 
   3.543981299242076*^9, {3.54398133384678*^9, 3.54398134925494*^9}, {
   3.5439814971375217`*^9, 3.543981499117347*^9}}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.7]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.7]], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0., 0.}, {2., 33.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{12.499999999999998`, 
         81.26816326530611}, {-25.109673320468048`, 97.71355789651417}}],
       StatusArea[#, 33.]& ,
       TagBoxNote->"33."],
      StyleBox["33.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[33., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{2., 0.}, {4., 46.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{80.26816326530611, 
         149.03632653061223`}, {-73.10064319382468, 97.71355789651417}}],
       StatusArea[#, 46.]& ,
       TagBoxNote->"46."],
      StyleBox["46.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[46., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{4., 0.}, {6., 52.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{148.03632653061223`, 
         216.80448979591836`}, {-95.25032159691236, 97.71355789651417}}],
       StatusArea[#, 52.]& ,
       TagBoxNote->"52."],
      StyleBox["52.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[52., {
        GrayLevel[0]}], "Tooltip"]& ], {}, 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{8., 0.}, {10., 52.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{283.57265306122446`, 
         352.34081632653056`}, {-95.25032159691236, 97.71355789651417}}],
       StatusArea[#, 52.]& ,
       TagBoxNote->"52."],
      StyleBox["52.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[52., {
        GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesOrigin->{0., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  PlotRange->{{0., 10.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.541984841423421*^9, 3.541986636952943*^9, {3.5419866748370247`*^9, 
   3.541986686154398*^9}, 3.541986734373497*^9, 3.541987624250462*^9, {
   3.541994015688012*^9, 3.541994025943425*^9}, {3.543979448322679*^9, 
   3.543979503985218*^9}, 3.543979620861958*^9, 3.543979713474833*^9, 
   3.543979759128117*^9, {3.543979886474265*^9, 3.543979891572447*^9}, {
   3.543979956911828*^9, 3.5439799620049353`*^9}, 3.543980021437813*^9, 
   3.5439800913537817`*^9, {3.5439802127035303`*^9, 3.543980228817295*^9}, {
   3.543980261346944*^9, 3.543980272517926*^9}, {3.543980312262897*^9, 
   3.543980336642597*^9}, 3.5439803802259283`*^9, {3.543980455338983*^9, 
   3.543980502409937*^9}, {3.54398130221948*^9, 3.5439813355856323`*^9}, 
   3.5439814998501873`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{740, 696},
WindowMargins->{{1, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 5, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 301, 6, 170, "Title"],
Cell[883, 30, 203, 2, 46, "Subtitle"],
Cell[CellGroupData[{
Cell[1111, 36, 99, 1, 67, "Section"],
Cell[1213, 39, 961, 16, 101, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2211, 60, 179, 4, 67, "Section"],
Cell[2393, 66, 2078, 37, 251, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4508, 108, 93, 1, 67, "Section"],
Cell[4604, 111, 70167, 1154, 759, "Text"],
Cell[CellGroupData[{
Cell[74796, 1269, 145, 2, 34, "Subsection"],
Cell[74944, 1273, 1391, 21, 86, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76372, 1299, 143, 2, 34, "Subsection"],
Cell[76518, 1303, 2540, 40, 191, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79095, 1348, 148, 2, 34, "Subsection"],
Cell[79246, 1352, 2657, 45, 296, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81952, 1403, 94, 1, 67, "Section"],
Cell[82049, 1406, 2781, 47, 281, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84867, 1458, 111, 1, 67, "Section"],
Cell[84981, 1461, 2272, 36, 161, "Text"],
Cell[CellGroupData[{
Cell[87278, 1501, 2465, 75, 19, "Input",
 CellOpen->False],
Cell[89746, 1578, 759, 19, 216, "Output"]
}, Open  ]],
Cell[90520, 1600, 577, 9, 71, "Text"],
Cell[CellGroupData[{
Cell[91122, 1613, 9190, 154, 19, "Input",
 CellOpen->False],
Cell[100315, 1769, 2378, 41, 225, "Output"]
}, Open  ]],
Cell[102708, 1813, 554, 9, 41, "Text"],
Cell[CellGroupData[{
Cell[103287, 1826, 2259, 54, 19, "Input",
 CellOpen->False],
Cell[105549, 1882, 3998, 109, 244, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
