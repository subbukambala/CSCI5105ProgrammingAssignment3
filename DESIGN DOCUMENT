Design:
------

1) DataTransfer Cycle
    File is transferred separately (to handle cases where data is not fit into main memory)

a compute node daemon which will take care of all the load 
balancing and communications with the server. . You can then spawn worker threads to 
do the actual sorting part assigned to the compute node.

Draw design diagram

2) Node status checker maintains a map<NodeId, last visited time>
   if last visited time is more than 30 secs... server assumes node is dead.

heart.beat.interval for every 30 secs...

Flow of request - diagram

Components:
----------
Server:

Compute Node:
a) Sender initiated process migration

Client:

Configuration:
--------------



Terminalogy:
------------
Job: client submits the job
Task: A Job is splitted into tasks.



Assumptions:
-----------
Data format 
Only one job at a time

 

Simple test cases:
-----------------
Sorting one value
sorting 10 values
duplicate values
Empty test data

Print node stats
Print task stats
what if all nodes are died?
test case with probability 0 

test case with probability 100
     --> server is sending any resul(even if two compute nodes are died)

Single node died


>> Explain about format of stats




